name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  DENO_VERSION: v2.x

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # Publish to JSR when a release is created
  publish-jsr:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true' || needs.release-please.outputs.releases_created == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Publish to JSR
        run: deno publish
        env:
          JSR_TOKEN: ${{ secrets.JSR_TOKEN }}

  # Publish to NPM when a release is created  
  publish-npm:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true' || needs.release-please.outputs.releases_created == 'true'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          scope: '@openminds-it-lab'
      - name: Build NPM package (scoped)
        run: deno run -A scripts/build_npm_scoped.ts
      - name: Publish to NPM (Organization Scope)
        run: cd npm-scoped && npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Note: Binary releases are still handled by the existing release-binaries.yml workflow
  # which triggers on tag creation. This provides a backup mechanism and keeps the
  # binary building separate from package publishing for reliability.